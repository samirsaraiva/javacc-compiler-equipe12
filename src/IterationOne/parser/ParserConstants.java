/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package IterationOne.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 11;
  /** RegularExpression Id. */
  int PUBLIC = 12;
  /** RegularExpression Id. */
  int STATIC = 13;
  /** RegularExpression Id. */
  int VOID = 14;
  /** RegularExpression Id. */
  int MAIN = 15;
  /** RegularExpression Id. */
  int STRING = 16;
  /** RegularExpression Id. */
  int ARRAY_MODIFIER = 17;
  /** RegularExpression Id. */
  int EXTENDS = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int BOOLEAN_TYPE = 20;
  /** RegularExpression Id. */
  int INT_ARRAY = 21;
  /** RegularExpression Id. */
  int INT = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int PRINT = 26;
  /** RegularExpression Id. */
  int OPERATOR = 27;
  /** RegularExpression Id. */
  int SEMI_COLON = 28;
  /** RegularExpression Id. */
  int EQUALS = 29;
  /** RegularExpression Id. */
  int LENGTH = 30;
  /** RegularExpression Id. */
  int POINT = 31;
  /** RegularExpression Id. */
  int BOOLEAN = 32;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 33;
  /** RegularExpression Id. */
  int THIS = 34;
  /** RegularExpression Id. */
  int NEW = 35;
  /** RegularExpression Id. */
  int NEGATION = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int LBRACE = 38;
  /** RegularExpression Id. */
  int RBRACE = 39;
  /** RegularExpression Id. */
  int LSQUAREBRACKET = 40;
  /** RegularExpression Id. */
  int RSQUAREBRACKET = 41;
  /** RegularExpression Id. */
  int LCURLYBRACE = 42;
  /** RegularExpression Id. */
  int RCURLYBRACE = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int multilinecomment = 1;
  /** Lexical state. */
  int singlelinecomment = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "\"//\"",
    "\"*/\"",
    "<token of kind 8>",
    "<token of kind 9>",
    "<token of kind 10>",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"[]\"",
    "\"extends\"",
    "\"return\"",
    "\"boolean\"",
    "<INT_ARRAY>",
    "\"int\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "<OPERATOR>",
    "\";\"",
    "\"=\"",
    "\"length\"",
    "\".\"",
    "<BOOLEAN>",
    "<INTEGER_LITERAL>",
    "\"this\"",
    "\"new\"",
    "\"!\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "<ID>",
    "<DIGIT>",
  };

}
